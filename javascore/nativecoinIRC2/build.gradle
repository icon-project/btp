version = '0.1.0'

dependencies {
    compileOnly 'foundation.icon:javaee-api:0.9.0'
    compileOnly 'foundation.icon:javaee-rt:0.9.0'
    compileOnly 'foundation.icon:icon-sdk:2.0.0'
    compileOnly 'foundation.icon:javaee-tooling:0.8.7'

    implementation project(':score-util')
    implementation project(':lib')
    implementation 'com.github.sink772:javaee-scorex:0.5.2'
    implementation 'com.github.sink772:javaee-tokens:0.5.5'
    implementation 'org.msgpack:msgpack-core:0.8.17'

    testImplementation 'foundation.icon:javaee-api:0.9.0'
    testImplementation 'foundation.icon:javaee-rt:0.9.0'
    testImplementation 'foundation.icon:icon-sdk:2.0.0'
    testImplementation 'foundation.icon:javaee-tooling:0.9.0'
    testImplementation 'org.mockito:mockito-core:3.3.3'
    testImplementation 'com.squareup.okhttp3:okhttp:3.11.0'
    testImplementation 'com.squareup.okhttp3:logging-interceptor:3.11.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.0'
    testImplementation 'org.bouncycastle:bcprov-jdk15on:1.60'

    testImplementation fileTree(dir: './lib', include: 'goloop-testsuite.jar')
    testImplementation fileTree(dir: './lib', include: 'testsvc.jar')

    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.6.0'
}

optimizedJar {
    mainClassName = 'foundation.icon.btp.bsh.NativeCoinService'
    archivesBaseName = 'native-bsh'
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}
logging.println("BMC Address   :" + System.getProperty("BMC_ADDRESS"))
deployJar {
    endpoints {
        gangnam {
            uri = 'https://gicon.net.solidwallet.io/api/v3'
            nid = 7
        }
        Sejong {
            uri = 'https://sejong.net.solidwallet.io/api/v3'
            nid = 0x53
        }
        local {
            uri = 'http://localhost:9082/api/v3'
            nid = 3
        }
        BTPTestnet {
            uri = 'https://btp.net.solidwallet.io/api/v3'
            nid = 	0x42
        }
    }
    keystore = rootProject.hasProperty('keystoreName') ? "$keystoreName" : ''
    password = rootProject.hasProperty('keystorePass') ? "$keystorePass" : ''

    parameters {
        arg('_bmc', System.getProperty("BMC_ADDRESS"))
    }
}

test {
    useJUnitPlatform()
}
